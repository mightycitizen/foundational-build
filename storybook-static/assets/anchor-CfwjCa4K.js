document.addEventListener("alpine:init",()=>{Alpine.data("stickyAnchor",()=>({activeAnchor:null,init(){this.bindEvents()},bindEvents(){window.addEventListener("scroll",this.throttle(()=>{document.documentElement.classList.contains("is-scrolling")||this.scroll()},100))},scrollToSection(e){const n=document.querySelector(e);n&&(window.scrollTo({top:n.offsetTop,behavior:"smooth"}),setTimeout(()=>{this.setActive(e)},550))},setActive(e){this.activeAnchor=e},scroll(){let e=null;document.querySelectorAll("[data-anchormenu] a").forEach(n=>{const t=document.querySelector(n.getAttribute("href"));if(t&&this.isInViewport(t,2/3)){e=n.getAttribute("href");return}}),this.setActive(e)},isInViewport(e,n){const t=e.getBoundingClientRect(),i=window.innerHeight||document.documentElement.clientHeight,o=window.innerWidth||document.documentElement.clientWidth,c=t.top<=i*n&&t.top+t.height>=0,r=t.left<=o*n&&t.left+t.width>=0;return c&&r},throttle(e,n){let t=Date.now();return function(){t+n-Date.now()<0&&(e(),t=Date.now())}}}))});const l=Object.freeze(Object.defineProperty({__proto__:null},Symbol.toStringTag,{value:"Module"}));export{l as _};
